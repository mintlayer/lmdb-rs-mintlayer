on:
  push:
    branches:
      - '**' # target all branches

name: Static code checks
jobs:
  clippy_check_ubuntu:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: rustup component add clippy

      # Checks enabled everywhere, including tests, benchmarks
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: >
            --workspace --all-targets --
            -D warnings
            -A clippy::new_without_default
            -W clippy::implicit_saturating_sub
            -W clippy::implicit_clone
            -W clippy::map_unwrap_or
            -W clippy::unnested_or_patterns
            -W clippy::manual_assert
            -W clippy::unused_async
            -W clippy::mut_mut

      # Checks that only apply to production code
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: >
            --workspace --lib --bins --examples --
            -A clippy::all
            -W clippy::unwrap_used
            -W clippy::dbg_macro
            -W clippy::items_after_statements
            -W clippy::fallible_impl_from
            -W clippy::string_slice

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install rust stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
          default: true
      - name: Checkout repository and submodules
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Run rustfmt
        run: cargo fmt --all -- --check
