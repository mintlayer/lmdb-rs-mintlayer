name: build

on:
  push:
    branches:
      - '**' # target all branches


env:
  CARGO_TERM_COLOR: always
  RUST_LOG: debug

jobs:

  build_windows:
    runs-on: windows-latest
    # if: github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v2
    - name: Install rust stable
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        default: true
    - name: Checkout repository and submodules
      uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Build release
      run: cargo build --release
    - name: Build debug
      run: cargo build
    - name: Run tests release
      run: cargo test --all --release
    - name: Run tests debug
      run: cargo test --all

  build_windows_nightly:
    runs-on: windows-latest
    # if: github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v2
    - name: Install rust nightly
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        default: true
    - name: Checkout repository and submodules
      uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Build release
      run: cargo build --release
    - name: Build debug
      run: cargo build
    - name: Run tests release
      run: cargo test --all --release
    - name: Run tests debug
      run: cargo test --all
    - name: Run bench debug
      run: cargo bench --all

  build_ubuntu:
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v2
    - name: Install rust stable
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        default: true
    - name: Checkout repository and submodules
      uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Build release
      run: cargo build --release
    - name: Build debug
      run: cargo build
    - name: Run tests release
      run: cargo test --all --release
    - name: Run tests debug
      run: cargo test --all

  build_ubuntu_nightly:
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v2
    - name: Install rust nightly
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        default: true
    - name: Checkout repository and submodules
      uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Build release
      run: cargo build --release
    - name: Build debug
      run: cargo build
    - name: Run tests release
      run: cargo test --all --release
    - name: Run tests debug
      run: cargo test --all
    - name: Run bench debug
      run: cargo bench --all

  build_macos:
    runs-on: macos-latest
    # if: github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v2
    - name: Install rust stable
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        default: true
    - name: Checkout repository and submodules
      uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Build release
      run: cargo build --release
    - name: Build debug
      run: cargo build
    - name: Run tests release
      run: cargo test --all --release
    - name: Run tests debug
      run: cargo test --all

  build_macos_nightly:
    runs-on: macos-latest
    # if: github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v2
    - name: Install rust nightly
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        default: true
    - name: Checkout repository and submodules
      uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Build release
      run: cargo build --release
    - name: Build debug
      run: cargo build
    - name: Run tests release
      run: cargo test --all --release
    - name: Run tests debug
      run: cargo test --all
    - name: Run bench debug
      run: cargo bench --all
